
var watch = require('watch');
var cp = require('child_process'); 

namespace('test', function () {

  var watchdir = '.';
  var cmd = 'tapper ./test';

  var alreadyExecuting = false;

  function execAndOutput(cmd){
    if(!alreadyExecuting){
      alreadyExecuting = true;
      console.log("Executing cmd:", cmd);
      cp.exec(cmd, function(err, stdout, stderr){
        if(err && err.message) console.log(err.message);
        console.log(stdout); 
        console.error(stderr);
        alreadyExecuting = false;
      });
    }
  }
  
  function filterWatch(f){
    if(/flymake/.test(f)) return false;    //ignore flymake files
    if(/^\.|\/\./.test(f)) return false;   //ignore hidden files or dirs
    console.log(f);
    return true;  
  }
  
  desc('watch and run tests');
  task('watch', ['test:run'], function () {
    // watch the watchdir and if anything changes, rerun the command
    watch.createMonitor(watchdir, { ignoreDotFiles: true }, function(monitor) {
      monitor.on("created", function(f, stat){ if(filterWatch(f)) execAndOutput(cmd); });
      monitor.on("changed", function(f, curr, prev){ 
        if(filterWatch(f) && curr.mtime > prev.mtime) {
          //console.log(prev.mtime);
          console.log(curr.mtime);
          execAndOutput(cmd); 
        }
      });
      monitor.on("removed", function(f, stat){ if(filterWatch(f)) execAndOutput(cmd); });
    });
  });


  desc('run tests');
  task('run', [], function (cmdarg1, cmdarg2, cmdargN) {
    execAndOutput(cmd);
  });

});










