'use strict';

function loadUser(uid, cb) { setTimeout(cb, 100, null, "User" + uid); }
function loadFile(filename, cb) { setTimeout(cb, 100, null, 'Filedata' + filename); }
function markdown(filedata) { return 'html' + filedata; }
function prepareDirectory(outDirname, cb) { setTimeout(cb, 200, null, 'dircreated-' + outDirname); }
function writeOutput(html, user, cb) {  setTimeout(cb, 300, null, html + '_bytesWritten'); }
function loadEmailTemplate(cb) { setTimeout(cb, 50, null, 'emailmd'); }
function customizeEmail(user, emailHtml, cb) { return 'cust-' + user + emailHtml; }
function deliverEmail(custEmailHtml, cb) { setTimeout(cb, 100, null, 'delivered-' + custEmailHtml); }

function analyze(fn) {
  console.log(fn.toString());
}

var fn = analyze(function loadAndSend(filename, uid, outDirname, cb,
                         R, filedata, outDirName, dircreated, emailmd, emailHtml,
                                   custEmailHtml, deliveredEmail, err, user, html, bytesWritten) {
  R.async(loadUser, uid).cb(err, user)
    .async(loadFile, filename).cb(err, filedata)
    .sync(markdown, filedata).returns(filedata)
    .async(prepareDirectory, outDirName).cb(dircreated)
    .async(writeOutput, html, user).cb(err, bytesWritten).after(prepareDirectory)
    .async(loadEmailTemplate).cb(err, emailmd)
    .sync(markdown, emailmd).returns(emailHtml)
    .sync(customizeEmail, user, emailHtml).returns(custEmailHtml)
    .sync(deliverEmail, custEmailHtml).returns(deliveredEmail).after(writeOutput)
    .finalCb(err, html, user, bytesWritten);
});
