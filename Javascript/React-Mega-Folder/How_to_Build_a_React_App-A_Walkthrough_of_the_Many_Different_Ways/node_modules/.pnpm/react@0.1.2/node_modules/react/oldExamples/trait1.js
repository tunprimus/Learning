'use strict';

var trait = require('light-traits').Trait;

var tTaskMethods = trait({
  ready: trait.required,
  isReady: function(){ return this.ready; },
  exec: function(){ console.log('exec'); },
  toString: function(){ return 'taskMethods'; },
  matches: function (taskDef) { return (/foo/.test(taskDef.name)) }
});

var tDebugOutput = trait({
  isReady: trait.required,
  //toStringTaskMethods: trait.required,
  toString: function(){ return "trait: ready: "+this.isReady() /* +
                        ' taskMethods: '+this.toStringTaskMethods();*/
                      }
});

var tTask = trait.compose(
//    tTaskMethods.resolve({ toString: 'toStringTaskMethods' }),
    tTaskMethods.resolve({ toString: null }),
    tDebugOutput
);

function taskFactory(ready){
  return tTask.create({ ready: ready });
}

var t = taskFactory(true);
console.log(t.toString());

if (t.isReady()) {
  t.exec();
}

console.log('foo', tTaskMethods.matches.value({ name: 'foo'}));
console.log('bar', tTaskMethods.matches.value({ name: 'bar'}));

console.log(tTask);