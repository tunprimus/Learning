'use strict';

var trait = require('traits').Trait;




var tTaskMethods = trait({
  ready: trait.required,
  isReady: function(){ return this.ready; },
  exec: function(){ console.log('exec'); },
  toString: function(){ return 'taskMethods'; }
});

var tDebugOutput = trait({
  isReady: trait.required,
  toString: function(){ return "trait: ready: "+this.isReady(); }
});

function Foo() {
}

Foo.prototype = { };
Foo.prototype.constructor = Foo;
Foo.prototype.greet = function(){ console.log('hello'); };

function taskFactory(ready){
  return Object.create(Foo.prototype, trait.compose(
    tTaskMethods,
    tDebugOutput,
    trait({ ready: ready })
  ));
}



var t = taskFactory(true);
console.log(t.toString());

if (t.isReady()) {
  t.exec();
}

t.greet();